syntax = "proto3";

package calculator;
option go_package="calculator/pb";

message Calculator {
  int64 sum1 = 1;
  int64 sum2 = 2;
}

message Number {
  int64 number = 1;
}

message CalculatorRequest {
  Calculator calculator = 1;
}

message CalculatorResponse {
  int64 result = 1;
}

message PrimeNumberDecompositionRequest {
  int64 number = 1;
}

message PrimeNumberDecompositionResponse {
  int64 result = 1;
}

message ComputeAverageRequest {
  int64 number = 1;
}

message ComputeAverageResponse {
  double result = 1;
}

message FindMaximumRequest {
  int64 number = 1;
}

message FindMaximumResponse {
  int64 result = 1;
}

message SquareRootRequest {
  int32 number = 1;
}

message SquareRootResponse {
  double number_root = 1;
}

service CalculatorService {
  rpc Calc(CalculatorRequest) returns (CalculatorResponse) {};

  rpc Decomposition(PrimeNumberDecompositionRequest) returns (stream PrimeNumberDecompositionResponse) {};

  rpc ComputeAverage(stream ComputeAverageRequest) returns (ComputeAverageResponse) {};

  rpc FindMaximum(stream FindMaximumRequest) returns (stream FindMaximumResponse) {};

  // error handling
  // this RPC will throw an exception if the sent number is negative
  // The error being sent is of type INVALID_ARGUMENT
  rpc SquareRoot(SquareRootRequest) returns (SquareRootResponse) {};
}
